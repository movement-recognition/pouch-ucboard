import time
import requests
import click
import pandas as pd
import numpy as np

@click.group()
def cli():
    pass

@cli.command()
@click.option("--inputFile", default="data/rawData.csv", help="CSV-File generated by schnieboard to read the raw data from")
@click.option("--influxBaseUrl", default="https://sensor:wd40@smartpouch.foobar.rocks/influx", help="URL to influx-server endpoint")
@click.option("--influxDatabase", default="master", help="Database-name of influx-server to write in")
@click.option("--tickTimeZero", default=time.time(), type=float, help="unix timestamp (seconds since 1970â€¦) to which the schnieboard 0-tick is aligned to.")
@click.pass_context
def upload(ctx, inputfile, influxbaseurl, influxdatabase, ticktimezero):
    read_filename = inputfile
    with open(read_filename, "r") as f:
        raw_rows = []
        marker_rows = []
        for row in f.readlines():
            if ";meas;" in row:
                raw_rows.append(row.strip().split(";"))
            elif ">;" not in row:
                print(row.strip())

    df = pd.DataFrame(raw_rows[1:])
    df = df.rename(columns=dict(zip(df.columns, raw_rows[0])))

    grafana_string = ""
    batch_limit = 100
    batchct = 0
    for index, row in df.iterrows():
        substr = ""
        for k in row.keys():
            if k not in ["#", "meas", "ticks", 18]:
                substr += f"{k}={row[k]},"
        time_str = ticktimezero * 1e6 + int(row["ticks"]) * 1000
        batchct += 1

        grafana_string += f"schnieboard_meas,sensor=pouch01,type=meas {substr.strip(',')} {round(time_str)}\n"
        if batchct >= batch_limit:
            r = requests.post(f"{influxbaseurl}/write?db={influxdatabase}&precision=u", grafana_string, timeout=10)
            if r.status_code >= 200 and r.status_code <= 299:
                print(f"\r {index} / {df.shape[0]}", end="")
                grafana_string = ""
                batchct = 0
            else:
                print("req fail", r, r.text)

    print("\n Upload complete!")

if __name__ == "__main__":
    cli()
